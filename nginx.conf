user  nginx;
worker_processes  auto;

# don't send the nginx version number in error pages and Server header
server_tokens off;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    proxy_headers_hash_bucket_size  52;

    gzip  on;

    upstream app {
        server unix:PATH/gunicorn.sock fail_timeout=5s;
    }

    server {
        listen 80;
        server_name 123.207.126.160;

        access_log PATH/logs/nginx-access.log;
        error_log PATH/logs/nginx-error.log warn;

        location /.well-known/acme-challenge {
            allow all;
        }

        location / {
            return         301 https://$server_name$request_uri;
        }

    }

    server {
        listen 443 ssl http2;
        server_name 123.207.126.160;

        access_log PATH/logs/nginx-access.log;
        error_log PATH/logs/nginx-error.log warn;

        ssl on;
        ssl_certificate /etc/letsencrypt/live/123.207.126.160/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/123.207.126.160/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/123.207.126.160/chain.pem;

        #  Store session parameters in cache and for 180 minutes.
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 180m;

        # Uses only TLS.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Specifies the enabled ciphers.
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

        ssl_dhparam /etc/nginx/cert/dhparam.pem;

        # Uses HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location /.well-known/acme-challenge {
            allow all;
        }
        location /static/ {
          autoindex on;
          alias   PATH/paiba/static/;
        }

        location /media/ {
          autoindex on;
          alias   PATH/paiba/media/;
        }

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        # cookiecutter-django app
        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            if (!-f $request_filename) {
              proxy_pass http://app;
              break;
            }

        }

    }

}
